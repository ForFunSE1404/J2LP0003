/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fpt.edu.lab.gui;

import fpt.edu.lab.controller.EncryptionControl;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author MTC
 */
public class LSB_Encrypt_GUI extends javax.swing.JFrame {

    /**
     * Creates new form LBS_Encrypt_GUI
     */
    public LSB_Encrypt_GUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private ImageIcon resizeImage(String ImagePath, JLabel label) {
        ImageIcon myImage = new ImageIcon(ImagePath);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jpnHidingData = new javax.swing.JPanel();
        jlbTitle = new javax.swing.JLabel();
        jlbSecretText = new javax.swing.JLabel();
        jtxtSecretMess = new javax.swing.JTextField();
        jtxtOriginalPath = new javax.swing.JTextField();
        jbtnBrowse = new javax.swing.JButton();
        jlbOriginalImagePath1 = new javax.swing.JLabel();
        jpnOriginalImage = new javax.swing.JPanel();
        jlbOriginalImage = new javax.swing.JLabel();
        jpnOriginalDisplay = new javax.swing.JPanel();
        jlbOriginalDisplay = new javax.swing.JLabel();
        jbtnHideMess = new javax.swing.JButton();
        jlbMessage = new javax.swing.JLabel();
        jpnStegoImage = new javax.swing.JPanel();
        jlbStegoImage = new javax.swing.JLabel();
        jpnStegoDisplay = new javax.swing.JPanel();
        jlbStegoDisplay = new javax.swing.JLabel();
        jbtnSaveStegoImage = new javax.swing.JButton();
        jbtnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LSB Encrypt");
        setAutoRequestFocus(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jlbTitle.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlbTitle.setText("Hiding data in image using LSB subsitution");

        jlbSecretText.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jlbSecretText.setText("Secret Text:");

        jtxtSecretMess.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jtxtSecretMess.setForeground(java.awt.Color.gray);
        jtxtSecretMess.setText("<<enter a secret message>>");
        jtxtSecretMess.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtSecretMessFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtSecretMessFocusLost(evt);
            }
        });

        jtxtOriginalPath.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        jbtnBrowse.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jbtnBrowse.setText("Browse");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });

        jlbOriginalImagePath1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jlbOriginalImagePath1.setText("Original image file:");

        javax.swing.GroupLayout jpnHidingDataLayout = new javax.swing.GroupLayout(jpnHidingData);
        jpnHidingData.setLayout(jpnHidingDataLayout);
        jpnHidingDataLayout.setHorizontalGroup(
            jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnHidingDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnHidingDataLayout.createSequentialGroup()
                        .addComponent(jlbSecretText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addGroup(jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpnHidingDataLayout.createSequentialGroup()
                                .addComponent(jtxtOriginalPath, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtnBrowse))
                            .addComponent(jtxtSecretMess)))
                    .addGroup(jpnHidingDataLayout.createSequentialGroup()
                        .addComponent(jlbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpnHidingDataLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(jlbOriginalImagePath1)
                    .addContainerGap(586, Short.MAX_VALUE)))
        );
        jpnHidingDataLayout.setVerticalGroup(
            jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnHidingDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbTitle)
                .addGap(20, 20, 20)
                .addGroup(jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbSecretText)
                    .addComponent(jtxtSecretMess, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtOriginalPath, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jpnHidingDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnHidingDataLayout.createSequentialGroup()
                    .addContainerGap(115, Short.MAX_VALUE)
                    .addComponent(jlbOriginalImagePath1)
                    .addGap(16, 16, 16)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 71;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 10);
        getContentPane().add(jpnHidingData, gridBagConstraints);

        jlbOriginalImage.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlbOriginalImage.setText("Original image");

        jpnOriginalDisplay.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jpnOriginalDisplayLayout = new javax.swing.GroupLayout(jpnOriginalDisplay);
        jpnOriginalDisplay.setLayout(jpnOriginalDisplayLayout);
        jpnOriginalDisplayLayout.setHorizontalGroup(
            jpnOriginalDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnOriginalDisplayLayout.createSequentialGroup()
                .addComponent(jlbOriginalDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpnOriginalDisplayLayout.setVerticalGroup(
            jpnOriginalDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbOriginalDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );

        jbtnHideMess.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jbtnHideMess.setText("Hide the message");
        jbtnHideMess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHideMessActionPerformed(evt);
            }
        });

        jlbMessage.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jlbMessage.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jpnOriginalImageLayout = new javax.swing.GroupLayout(jpnOriginalImage);
        jpnOriginalImage.setLayout(jpnOriginalImageLayout);
        jpnOriginalImageLayout.setHorizontalGroup(
            jpnOriginalImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnOriginalImageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnOriginalImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpnOriginalImageLayout.createSequentialGroup()
                        .addComponent(jbtnHideMess)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlbMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpnOriginalImageLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jlbOriginalImage, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpnOriginalDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnOriginalImageLayout.setVerticalGroup(
            jpnOriginalImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnOriginalImageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbOriginalImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnOriginalDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnOriginalImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnOriginalImageLayout.createSequentialGroup()
                        .addComponent(jbtnHideMess, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jlbMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 20, 0);
        getContentPane().add(jpnOriginalImage, gridBagConstraints);

        jlbStegoImage.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlbStegoImage.setText("Stego-image");

        jpnStegoDisplay.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jpnStegoDisplayLayout = new javax.swing.GroupLayout(jpnStegoDisplay);
        jpnStegoDisplay.setLayout(jpnStegoDisplayLayout);
        jpnStegoDisplayLayout.setHorizontalGroup(
            jpnStegoDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbStegoDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );
        jpnStegoDisplayLayout.setVerticalGroup(
            jpnStegoDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbStegoDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );

        jbtnSaveStegoImage.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jbtnSaveStegoImage.setText("Save Stego-image");
        jbtnSaveStegoImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveStegoImageActionPerformed(evt);
            }
        });

        jbtnBack.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jbtnBack.setText("Back To Main Menu");
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnStegoImageLayout = new javax.swing.GroupLayout(jpnStegoImage);
        jpnStegoImage.setLayout(jpnStegoImageLayout);
        jpnStegoImageLayout.setHorizontalGroup(
            jpnStegoImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnStegoImageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnStegoImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnStegoImageLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jlbStegoImage))
                    .addGroup(jpnStegoImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnStegoImageLayout.createSequentialGroup()
                            .addComponent(jbtnSaveStegoImage)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnBack))
                        .addComponent(jpnStegoDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnStegoImageLayout.setVerticalGroup(
            jpnStegoImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnStegoImageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbStegoImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnStegoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnStegoImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSaveStegoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 18, 20, 10);
        getContentPane().add(jpnStegoImage, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtSecretMessFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtSecretMessFocusGained
        if (jtxtSecretMess.getText().equals("<<enter a secret message>>")) {
            jtxtSecretMess.setText("");
            jtxtSecretMess.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jtxtSecretMessFocusGained

    private void jtxtSecretMessFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtSecretMessFocusLost
        if (jtxtSecretMess.getText().isEmpty()) {
            jtxtSecretMess.setForeground(Color.GRAY);
            jtxtSecretMess.setText("<<enter a secret message>>");
        }
    }//GEN-LAST:event_jtxtSecretMessFocusLost

    private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        //lọc những file image trong hộp thoại chooser
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "bmp", "jpg", "jpeg", "png");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(filter);
        int file = fileChooser.showSaveDialog(null);
        if (file == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            //lấy địa chỉ của file được chọn
            String path = selectedFile.getAbsolutePath();
            jtxtOriginalPath.setText(path);
            jlbOriginalDisplay.setIcon(resizeImage(path, jlbOriginalDisplay));
        } else if (file == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(this, "No file selected");
        }
    }//GEN-LAST:event_jbtnBrowseActionPerformed

    private boolean checkValidImg(String imgPath) {
        return imgPath.endsWith("png") || imgPath.endsWith("jpg") || imgPath.endsWith("jpeg") || imgPath.endsWith("bmp");
    }

    private void jbtnHideMessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHideMessActionPerformed
        String message = jtxtSecretMess.getText();
        String imgPath = jtxtOriginalPath.getText();
        if ("".equals(imgPath)) {
            JOptionPane.showMessageDialog(this, "Please selected imgage to encrypt");
            return;
        }
        if (!checkValidImg(imgPath)) {
            JOptionPane.showMessageDialog(this, "Please choose a valid imgage to encrypt");
            return;
        }
        if (EncryptionControl.encrypt(message, imgPath)) {
            JOptionPane.showMessageDialog(this, "Encrypt Success.....");
            jlbStegoDisplay.setIcon(resizeImage("stego.png", jlbStegoDisplay));
        } else {
            JOptionPane.showMessageDialog(this, "Encrypt Fail.....");
        }

    }//GEN-LAST:event_jbtnHideMessActionPerformed

    private void jbtnSaveStegoImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveStegoImageActionPerformed
        boolean checkPng = false;
        while (!checkPng) {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Specify a file to save");
            fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Images", "png"));
            fileChooser.setAcceptAllFileFilterUsed(false);
            int fileSave = fileChooser.showSaveDialog(this);
            if (fileSave == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                //check đuôi image có phải là định dạng png hay không
                if (!fileToSave.getAbsolutePath().endsWith(".png")) {
                    JOptionPane.showMessageDialog(this, "Encrypt Image must be png image!");
                } else {
                    checkPng = true;
                }
                try {
                    if (checkPng) {
                        //copy ảnh stego sang địa chỉ mới mà user chọn.
                        Files.copy(Paths.get("stego.png"), Paths.get(fileToSave.getAbsolutePath()), StandardCopyOption.REPLACE_EXISTING);
                        JOptionPane.showMessageDialog(this, "Save Success");
                    }
                } catch (IOException ex) {
                    Logger.getLogger(LSB_Encrypt_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (fileSave == JFileChooser.CANCEL_OPTION) {
                return;
            }
        }
    }//GEN-LAST:event_jbtnSaveStegoImageActionPerformed

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBackActionPerformed
        new MainFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_jbtnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnBack;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnHideMess;
    private javax.swing.JButton jbtnSaveStegoImage;
    private javax.swing.JLabel jlbMessage;
    private javax.swing.JLabel jlbOriginalDisplay;
    private javax.swing.JLabel jlbOriginalImage;
    private javax.swing.JLabel jlbOriginalImagePath1;
    private javax.swing.JLabel jlbSecretText;
    private javax.swing.JLabel jlbStegoDisplay;
    private javax.swing.JLabel jlbStegoImage;
    private javax.swing.JLabel jlbTitle;
    private javax.swing.JPanel jpnHidingData;
    private javax.swing.JPanel jpnOriginalDisplay;
    private javax.swing.JPanel jpnOriginalImage;
    private javax.swing.JPanel jpnStegoDisplay;
    private javax.swing.JPanel jpnStegoImage;
    private javax.swing.JTextField jtxtOriginalPath;
    private javax.swing.JTextField jtxtSecretMess;
    // End of variables declaration//GEN-END:variables
}
